package org.coffee.hibernate;

import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Properties;

import org.coffee.hibernate.dao.util.Configuration;

/**
 * 数据链连接
 * @author wangtao
 */
public class SqlConnection {
	
	private static String driver = null;
	private static String url = null;
	private static String username = null;
	private static String password = null;

	static{
		Properties prop = new Properties();
		try {
			prop.load(new FileInputStream(SqlConnection.class.getClassLoader().getResource("/").getPath()+"jdbc.properties"));
		}catch (IOException e) {
			e.printStackTrace();
		}
		try {
			url = prop.getProperty("url");
			username = prop.getProperty("username");
			password = prop.getProperty("password");
			driver = prop.getProperty("driver");
			if(driver.toUpperCase().contains("ORACLE")){
				Configuration.setDialect("ORACLE");
			}else if(driver.toUpperCase().contains("MYSQL")){
				Configuration.setDialect("MYSQL");
			}else{
				Configuration.setDialect("HSQLDB");
			}
		} catch (Exception e) {
			// 默认采用Hsqldb数据库
			String[]  args = "--database.0 file:mydb --dbname.0 xdb".split(" ");   
		    org.hsqldb.server.Server.main(args);
		    //jdbc:hsqldb:file:/opt/db/testdb;ifexists=true
		    url = "jdbc:hsqldb:hsql://localhost/xdb";
//		    url = "jdbc:hsqldb:file:c:/hsqldb/test;ifexists=true";
		    driver = "org.hsqldb.jdbc.JDBCDriver";
		    username = "SA";
		    password = "";
		    Configuration.setDialect("HSQLDB");
		    
		    initHsql();
		}
		
	}

	private static void initHsql(){
		Connection conn = new SqlConnection().getConnection();
		
		String tableName = "users";
	
		String sql = "create table "+tableName+"("+
			"ID   BIGINT GENERATED BY DEFAULT AS IDENTITY (start with 1), "+
			"USERNAME VARCHAR(20) not null,"+
			"PASSWORD VARCHAR(20) not null,"+
			"AGE      INT,"+
			"BIRTHDAY TIMESTAMP,"+
			"DESCRIBE VARCHAR(20),"+
			"PHOTO    VARCHAR(20)"+
		    ")";
		try {
			ResultSet rs = conn.getMetaData().getTables(null, null, tableName.toUpperCase(), null);   
			if(rs.next()){   
			    System.out.println("数据表 "+rs.getObject(3).toString()+"已经存在");  
			    String delSql = "drop table "+tableName;
			    Statement stmt = conn.createStatement();
			    stmt.execute(delSql);
			    stmt.close();
			} else{ // 数据表不存在，则创建
				Statement stmt = conn.createStatement();
				stmt.execute(sql);
				stmt.close();
			}
			rs.close();
			conn.close();
		} catch (SQLException e) {
			e.printStackTrace();
		} 
	}
	
	
	private static ConnectionPool cp;
	private static void init(){
		cp = new ConnectionPool(driver,url,username,password);
	}
	
	public Connection getConnection() {
		if (cp == null) {
			init();
		}
		try {
			return cp.getConnection();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return null;
	}
	
	//  以下是使用数据源
	
//	// tomcat 数据源
//	private  DataSource ds;
//	// 初始化数据源
//	private   void initDataSource() {
//		Context context;
//		try {
//			context = new InitialContext();
//			ds = (DataSource) context.lookup("java:comp/env/jdbc/mysqlds");
//		} catch (NamingException e) {
//			e.printStackTrace();
//		}
//	}
//	public Connection getConnection() {
//		if (ds == null) {
//			initDataSource();
//		}
//		Connection conn = null;
//		try {
//			conn = ds.getConnection();
//		} catch (SQLException e) {
//			e.printStackTrace();
//		}
//		return conn;
//	}
}
